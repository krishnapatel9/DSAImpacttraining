Majority Element:
From the given array:
assign arr[0] as majorityElement.
From the targetelement compare rest of the element.
if we got same value increase the count,else decrease the count.
counter becomes 0,means till now we havent seen majority elements.
again select the new target element,how? the very next element is your taregt  element.
at the end of for loop,if counter >0 it means that  there is a majority element.
now taking the target value ,count the repetition.


target = arr[0]
count = 1
loop(i=1,end)
compare target,arr[i]


import java.util.*;
class Main {
    public static void main(String[] args) {
    //   Majority element by n/2
    //   [1,1,1,1,2,2,2,3,1,2,2,2]
       int arr[]={1,1,1,1,2,2,2,3,1,2,2,2};
       int target=arr[0];
       int count=0;
       for (int i=0;i<arr.length;i++){
           if(arr[i]==target){
               count+=1;
           }
           else{
               count-=1;
           }
           
           if(count==0){
               target=arr[i];
               count=1;
           }
           count = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == target) {
                count++;
            }
        }

        if (count > arr.length / 2) {
            System.out.println("Majority element is: " + target);
        } else {
            System.out.println("No majority element found.");
        }
       }
    }
}
[1,1,1,1,2,2,2,3,1,2,2,2]

longest consecutive element

Step 1:Create a set
       Run a loop : using insert push elements of array in set.
       Iterate set values
       check:starting element or not by decreasing value 
by checking that value is there in set or not
if we got starting value.
then start comparing 



Q:239,209,1432
